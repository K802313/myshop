<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiki.myshop.dao.ShopUserLoginMapper">
  <resultMap id="BaseResultMap" type="ShopUserLogin">
    <id column="ID"  property="id" />
    <result column="username"  property="username" />
    <result column="password" property="password" />
    <result column="lock_state" property="lockState" />
    <result column="update_time"  property="updateTime" />
    <result column="create_time"  property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, username, password, lock_state, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_user_login
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserName" resultType="java.lang.String">
        select username from shop_user_login where username=#{username} limit 1
  </select>
  <select id="selectByUserNameU" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shop_user_login where username=#{username} limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_user_login
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="ShopUserLogin">
    insert into shop_user_login (username, password,
      lock_state, update_time, create_time
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{lockState,jdbcType=CHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="ShopUserLogin">
    insert into shop_user_login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="lockState != null">
        lock_state,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lockState != null">
        #{lockState,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ShopUserLogin">
    update shop_user_login
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lockState != null">
        lock_state = #{lockState,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ShopUserLogin">
    update shop_user_login
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      lock_state = #{lockState,jdbcType=CHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>